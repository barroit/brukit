#!/usr/bin/python3
# SPDX-License-Identifier: GPL-3.0-or-later or MIT

import json
import re
import sys

data_file = open('EastAsianWidth.txt', 'r')
setting_file = open('.vscode/settings.json', 'r')

cp = []
last = [ 0, 0 ]

setting = json.load(setting_file)
license = setting['fileHeaderComment.parameter']['*']['license']

for line in data_file:
	if not re.search(r';\s*[WF]\s', line):
		continue

	col = line.split()
	pair = col[0].split('..')

	start = int(pair[0], 16)

	if len(pair) == 1:
		end = start
	else:
		end = int(pair[1], 16)

	# up to BMP
	if start > 0xffff:
		break

	if last[1] + 1 == start:
		last[1] = end
	else:
		cp.append((hex(last[0]), hex(last[1])))
		last[0] = start
		last[1] = end

cp.append((hex(last[0]), hex(last[1])))
cp = cp[1:]

sys.stdout = open('platfree/utf32.c', 'w')

print(f"""\
// SPDX-License-Identifier: {license}
/*
 * Copyright 2024, 2025 Jiamu Sun <barroit@linux.com>
 *
 * Generated by scripts/utf32gen.py.
 */

#include "utf32.h"

#include "calc.h"

static const wchar_t _termchar[] = {{
	0x0021,  /* EXCLAMATION MARK */
	0x002c,  /* COMMA */
	0x002e,  /* FULL STOP */
	0x003f,  /* QUESTION MARK */
	0x2025,  /* TWO DOT LEADER */
	0x2026,  /* HORIZONTAL ELLIPSIS */
	0x3001,  /* IDEOGRAPHIC COMMA */
	0x3002,  /* IDEOGRAPHIC FULL STOP */
	0xff01,  /* FULLWIDTH EXCLAMATION MARK */
	0xff0c,  /* FULLWIDTH COMMA */
	0xff0e,  /* FULLWIDTH FULL STOP */
	0xff1f,  /* FULLWIDTH QUESTION MARK */
}};

static const wchar_t _fullwidth[][2] = {{\
""")

for start, end in cp:
	print(f'\t{{ {start}, {end} }},')

print('''\
};

int wc_termchar(wchar_t c)
{
	size_t l = 0;
	size_t r = sizeof_array(_termchar);

	while (l < r) {
		size_t m = (l + r) >> 1;

		if (c < _termchar[m])
			r = m;
		else if (c > _termchar[m])
			l = m + 1;
		else
			return 1;
	}

	return 0;
}

int wc_fullwidth(wchar_t c)
{
	size_t l = 0;
	size_t r = sizeof_array(_fullwidth);

	while (l < r) {
		size_t m = (l + r) >> 1;

		if (c < _fullwidth[m][0])
			r = m;
		else if (c > _fullwidth[m][1])
			l = m + 1;
		else
			return 1;
	}

	return 0;
}\
''')
