/* SPDX-License-Identifier: GPL-3.0-or-later or MIT */
/*
 * Copyright 2024 Jiamu Sun <barroit@linux.com>
 */

#ifndef NG39_UNITEST_H
#define NG39_UNITEST_H

#include <stddef.h>

#include "attr.h"
#include "compiler.h"
#include "ussert.h"

#define ut_tmp_name(x)        __ut_tmp_name(x, __COUNTER__)
#define __ut_tmp_name(x)      ___ut_tmp_name(x, __COUNTER__)
#define ___ut_tmp_name(...)   ____ut_tmp_name(__VA_ARGS__)
#define ____ut_tmp_name(x, i) XC("@TEST_TMP@" "/" x "_" #i)

void __free(void *ptr);

typedef void (*ut_cb)(void);

extern ut_cb __ut_begin[];
extern ut_cb __ut_end[];

extern ut_cb __ut_setup;
extern ut_cb __ut_teardown;

extern uint __ut_fail_cnt;

#define __ut_ld_sec       __section(".miku_test") __used
#define __ut_cb_ptr(name) static __ut_ld_sec void (*name ## _ptr)(void)
#define __ut_cb_def(name) static void name(void)
#define __ut_cb(name, lv) __ut_cb_def(name); lv = &name; __ut_cb_def(name)

#define UT_ROUTINE(name) \
	__ut_cb(__test_ ## name, __ut_cb_ptr(__test_ ## name))

#ifdef __unix__
# define UT_ROUTINE_UNIX(name) \
	 __ut_cb(__unix_test_ ## name, __ut_cb_ptr(__unix_test_ ## name))
#else
# define UT_ROUTINE_UNIX(name) \
	 static __maybe_unused void __unix_test_ ## name(void)
#endif

#ifdef _WIN32
# define UT_ROUTINE_WIN32(name) \
	 __ut_cb(__win32_test_ ## name, __ut_cb_ptr(__win32_test_ ## name))
#else
# define UT_ROUTINE_WIN32(name) \
	 static __maybe_unused void __win32_test_ ## name(void)
#endif

#define UT_BEGIN(...) \
	uint __ut_fail_cnt = 0; \
	ut_cb __ut_ld_sec __ut_begin[1] = { 0 }; \
	ADAP_CALL(__ut_begin_, ##__VA_ARGS__)

#define __ut_begin_0() \
	ut_cb __ut_setup = NULL

#define __ut_begin_1(name) \
	__ut_cb(name, ut_cb __ut_setup)

#define UT_END(...) \
	ut_cb __ut_ld_sec __ut_end[1] = { 0 }; \
	ADAP_CALL(__ut_end_, ##__VA_ARGS__)

#define __ut_end_0() \
	ut_cb __ut_teardown = NULL

#define __ut_end_1(name) \
	__ut_cb(name, ut_cb __ut_teardown)

#endif /* NG39_UNITEST_H */
